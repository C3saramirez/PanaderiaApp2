@page "/insumos"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioInsumos _repositorio;

<h3>Inventario</h3>

<a class="btn btn-success" href="insumos/nuevo">Agregar Insumo</a>

@if (_insumos == null)
{
    <p>Cargando...</p>
}

else if (_insumos.Count == 0)
{
    <p>No existen insumos en el inventario</p>
}

else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Descripción</th>
                <th>Precio de compra</th>
                <th>Cantidad</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Insumo insumo in _insumos)

            {
                <tr>
                    <td>@insumo.Id</td>
                    <td>@insumo.Nombre</td>
                    <td>@insumo.Precio</td>
                    <td>
                        <button class="btn btn-primary" @onclick="()=>Editar(insumo.Id)">Editar</button>
                        <button class="btn btn-danger" @onclick="()=>Eliminar(insumo)">Eliminar</button>
                    </td>
                </tr>
            }

        </tbody>
    </table>
}

@code {

    private List<Insumo>? _insumos;

    protected override async Task OnInitializedAsync()
    {
        _insumos = await _repositorio.GetAll();
    }

    private async void Eliminar(Insumo insumo)
    {
        await _repositorio.Delete(insumo.Id);
        _insumos!.Remove(insumo);
        StateHasChanged();
    }

    private void Editar(int id)
    {
        _navigator.NavigateTo($"/insumos/editar/{id}");
    }

}