@page "/insumos/nuevo"
@page "/insumos/editar/{Id:int}"
@rendermode InteractiveServer
@inject IRepositorioInsumos _repository;
@inject NavigationManager _navigator;
<PageTitle>@_message producto</PageTitle>
<h2>@_message producto</h2>

<EditForm Model="_producto" FormName="frmProductos" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="row mb-3">
        <label for="txtNombre" class="col-2 col-form-label">Nombre</label>
        <div class="col-10">
            <InputText class="form-control" id="txtNombre" @bind-Value="_producto.Nombre"></InputText>
            <ValidationMessage For="@(() => _producto.Nombre)" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtDescripcion" class="col-form-label col-2">Descripción</label>
        <div class="col-10">
            <InputText class="form-control" id="txtDescripcion" @bind-Value="_producto.Descripcion"></InputText>
            <ValidationMessage For="@(() => _producto.Descripcion)" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtPrecio" class="col-2 col-form-label">Precio de compra</label>
        <div class="col-10">
            <InputText class="form-control" id="txtPrecio" @bind-Value="_producto.Precio"></InputText>
            <ValidationMessage For="@(() => _producto.Precio)" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    <button type="button" class="btn btn-danger ms-2" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>

</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string _message = "";
    private Insumo _producto = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            Insumo? insumo = await _repository.Get(Id);
            _producto.Id = insumo!.Id;
            _producto.Nombre = insumo.Nombre;
            _producto.Descripcion = insumo.Descripcion;
            _producto.Precio = insumo.Precio;
            _message = "Editar";
        }
        else
        {
            _message = "Nuevo";
        }
    }

    private async void Guardar()
    {
        if (Id > 0)
        {
            await _repository.Update(_producto!);
        }
        else
        {
            await _repository.Add(_producto);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigator.NavigateTo("/insumos");
    }
}
